{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n//数据模拟\nimport Mock from \"mockjs\";\n\n//图表数据\nlet list = [];\nexport default {\n  getStatisticalData: () => {\n    for (let i = 0; i < 7; i++) {\n      list.push(Mock.mock({\n        苹果: Mock.Random.float(100, 8000, 0, 0),\n        vivo: Mock.Random.float(100, 8000, 0, 0),\n        oppo: Mock.Random.float(100, 8000, 0, 0),\n        魅族: Mock.Random.float(100, 8000, 0, 0),\n        三星: Mock.Random.float(100, 8000, 0, 0),\n        小米: Mock.Random.float(100, 8000, 0, 0)\n      }));\n    }\n    return {\n      code: 200,\n      data: {\n        //饼图\n        viedoData: [{\n          name: '小米',\n          value: 2999\n        }, {\n          name: '苹果',\n          value: 5999\n        }, {\n          name: 'vivo',\n          value: 2999\n        }, {\n          name: 'oppo',\n          value: 1999\n        }, {\n          name: '魅族',\n          value: 2200\n        }, {\n          name: '三星',\n          value: 4500\n        }],\n        //柱状图\n        useData: [{\n          data: '周一',\n          new: 5,\n          active: 200\n        }, {\n          data: '周二',\n          new: 10,\n          active: 500\n        }, {\n          data: '周三',\n          new: 12,\n          active: 550\n        }, {\n          data: '周四',\n          new: 60,\n          active: 800\n        }, {\n          data: '周五',\n          new: 65,\n          active: 550\n        }, {\n          data: '周六',\n          new: 53,\n          active: 770\n        }, {\n          data: '周日',\n          new: 33,\n          active: 170\n        }],\n        //折线图\n        orderData: {\n          date: ['20191001', '20191002', '20191003', '20191004', '20191005', '20191006', '20191007'],\n          data: list\n        },\n        tableData: [{\n          name: 'oppo',\n          todayBuy: 500,\n          monthBuy: 3500,\n          totalBuy: 22000\n        }, {\n          name: 'vivo',\n          todayBuy: 300,\n          monthBuy: 2200,\n          totalBuy: 24000\n        }, {\n          name: '苹果',\n          todayBuy: 800,\n          monthBuy: 4500,\n          totalBuy: 65000\n        }, {\n          name: '小米',\n          todayBuy: 1200,\n          monthBuy: 6500,\n          totalBuy: 45000\n        }, {\n          name: '三星',\n          todayBuy: 300,\n          monthBuy: 3000,\n          totalBuy: 22000\n        }, {\n          name: '魅族',\n          todayBuy: 350,\n          monthBuy: 3000,\n          totalBuy: 22000\n        }]\n      }\n    };\n  }\n};","map":{"version":3,"names":["Mock","list","getStatisticalData","i","push","mock","苹果","Random","float","vivo","oppo","魅族","三星","小米","code","data","viedoData","name","value","useData","new","active","orderData","date","tableData","todayBuy","monthBuy","totalBuy"],"sources":["D:/Users/user/Desktop/文件/前端/后台管理系统awsome/my-app/src/api/mockServeData/home.js"],"sourcesContent":["//数据模拟\r\nimport Mock from \"mockjs\";\r\n\r\n//图表数据\r\nlet list =[]\r\n\r\nexport default{\r\n    getStatisticalData:()=>{\r\n        for (let i = 0; i < 7; i++) {\r\n            list.push(\r\n                Mock.mock({\r\n                    苹果:Mock.Random.float(100,8000,0,0),\r\n                    vivo:Mock.Random.float(100,8000,0,0),\r\n                    oppo:Mock.Random.float(100,8000,0,0),\r\n                    魅族:Mock.Random.float(100,8000,0,0),\r\n                    三星:Mock.Random.float(100,8000,0,0),\r\n                    小米:Mock.Random.float(100,8000,0,0),\r\n                })\r\n            )\r\n        }\r\n        return{\r\n            code:200,\r\n            data:{\r\n                //饼图\r\n                viedoData:[\r\n                    {\r\n                        name:'小米',\r\n                        value:2999,\r\n                    },\r\n                    {\r\n                        name:'苹果',\r\n                        value:5999,\r\n                    },\r\n                    {\r\n                        name:'vivo',\r\n                        value:2999,\r\n                    },\r\n                    {\r\n                        name:'oppo',\r\n                        value:1999,\r\n                    },\r\n                    {\r\n                        name:'魅族',\r\n                        value:2200,\r\n                    },\r\n                    {\r\n                        name:'三星',\r\n                        value:4500,\r\n                    },\r\n                ],\r\n                //柱状图\r\n                useData:[\r\n                    {\r\n                        data:'周一',\r\n                        new:5,\r\n                        active:200,\r\n                    },\r\n                    {\r\n                        data:'周二',\r\n                        new:10,\r\n                        active:500,\r\n                    },\r\n                    {\r\n                        data:'周三',\r\n                        new:12,\r\n                        active:550,\r\n                    },\r\n                    {\r\n                        data:'周四',\r\n                        new:60,\r\n                        active:800,\r\n                    },\r\n                    {\r\n                        data:'周五',\r\n                        new:65,\r\n                        active:550,\r\n                    },\r\n                    {\r\n                        data:'周六',\r\n                        new:53,\r\n                        active:770,\r\n                    },\r\n                    {\r\n                        data:'周日',\r\n                        new:33,\r\n                        active:170,\r\n                    },\r\n                ],\r\n                //折线图\r\n                orderData:{\r\n                    date:['20191001','20191002','20191003','20191004','20191005','20191006','20191007'],\r\n                    data:list\r\n               },\r\n               tableData:[\r\n                    {\r\n                        name:'oppo',\r\n                        todayBuy:500,\r\n                        monthBuy:3500,\r\n                        totalBuy:22000,\r\n                    },\r\n                    {\r\n                        name:'vivo',\r\n                        todayBuy:300,\r\n                        monthBuy:2200,\r\n                        totalBuy:24000,\r\n                    },\r\n                    {\r\n                        name:'苹果',\r\n                        todayBuy:800,\r\n                        monthBuy:4500,\r\n                        totalBuy:65000,\r\n                    },\r\n                    {\r\n                        name:'小米',\r\n                        todayBuy:1200,\r\n                        monthBuy:6500,\r\n                        totalBuy:45000,\r\n                    },\r\n                    {\r\n                        name:'三星',\r\n                        todayBuy:300,\r\n                        monthBuy:3000,\r\n                        totalBuy:22000,\r\n                    },\r\n                    {\r\n                        name:'魅族',\r\n                        todayBuy:350,\r\n                        monthBuy:3000,\r\n                        totalBuy:22000,\r\n                    },\r\n               ]\r\n            }\r\n        }\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}